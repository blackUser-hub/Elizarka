version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5438:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"

  backend:
    container_name: backend
    hostname: backend
    image: backend:1.0.0
    restart: on-failure
    build:
      context: ./back
      dockerfile: backend.dockerfile
    environment:
      
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      DB_HOST: db
      BACKEND_HOST: backend
      BACKEND_PORT: ${BACKEND_PORT}
      # KAFKA_ORDERS_TOPIC_NAME: ${KAFKA_ORDERS_TOPIC_NAME}
      # KAFKA_HOST: broker
      # KAFKA_PORT: ${KAFKA_PORT}
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    depends_on:
      db:
        condition: service_healthy
  # frontend:
  #   build:
  #     context: ./front
  #     dockerfile: frontend.dockerfile
  #   ports:
  #     - "3000:80"


volumes:
  pgdata:
